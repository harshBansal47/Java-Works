Concept of streams
     Streams in programming means flow of data or a sequence of data that establish 
                   a link between logic unit and input output devices..

    Java has various Streams with its I/O package that support all the types of objects,
     data-types, characters,files etc to fully execute the I/O operations.
    
    Default Streams of java
      i) System.in         Standard input Stream
     ii) System.out        Standard output Stream
           1. print()                    ..display output 
           2. println()                  ..display output in next line
           3. printf()                   ..display output in formatted form
    iii) System.err        Standard error stream .. also uses above 3 methods to display errors
    
    Depending on the type of operations, streams can be divided into two primary classes
            1. Input Stream
            2. Output Stream
    Depending on the data a stream hold , it can be classified into:     
             i) ByteStream
                  popular classes(File input stream , File output stream)
            ii) Character Stream
                  popular classes( File reader , File writer)


  //////     input stream
     InputStream class is an abstract class in java.io package
     It is used to read the data from a source
     it extends : 
               1) FileInputStream 
               2) ByteArrayInputStream 
               3) ObjectInputStream
               4) FilterInputStream
                    i) BufferedInputStream
                   ii) PushBackInputStream
                  iii) DataInputStream  
               5) PipedInputStream

      so input stream is created using these classes
                                                            ///////////////

 // methods of input stream 
       read() : read one byte of data from InputStream
       read(byte[] array) : read byte from stream and stores in specified array
       available() : tells about number of bytes in inputstream
       mark() : marks the position in the input stream up to which data has been read
       reset() : returns the control to the point in the stream where the mark was set
       skips() : skips and discards the specified number of bytes from the input stream
       close() : closes the input stream

Brainly Explanation : The difference between InputStream and InputStreamReader is that
 InputStream reads as byte, while InputStreamReader reads as char. For example, if the text 
in a file is abc,then both of them work fine. But if the text is a你们, which is composed of
 an a and two Chinese characters, then the InputStream does not work 

BufferedInputStream reads the data in the buffer as bytes by using InputStream. 
BufferedReader reads the text but not as bytes and BufferedReader is efficient 
reading of characters,arrays and lines  

  